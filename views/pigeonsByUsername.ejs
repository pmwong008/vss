<!DOCTYPE html>
<html lang="en">
	<head>

		<!-- Basic Page Needs
						    –––––––––––––––––––––––––––––––––––––––––––––––––– -->
		<meta charset="utf-8">
		<title>Thank you for your support!</title>
		<meta name="description" content="">
		<meta
		name="author" content="">

		<!-- Mobile Specific Metas
						    –––––––––––––––––––––––––––––––––––––––––––––––––– -->
		<meta
		name="viewport" content="width=device-width, initial-scale=1">

		<!-- FONT
						    –––––––––––––––––––––––––––––––––––––––––––––––––– -->
		<link
		href="//fonts.googleapis.com/css?family=Raleway:400,300,600" rel="stylesheet" type="text/css">

		<!-- CSS
						    –––––––––––––––––––––––––––––––––––––––––––––––––– -->
		<link rel="stylesheet" href="../stylesheets/normalize.css">
		<link
		rel="stylesheet" href="../stylesheets/skeleton.css">

		<!-- Favicon
						    –––––––––––––––––––––––––––––––––––––––––––––––––– -->
		<link rel="icon" type="image/png" href="../images/favicon.png">

	</head>

	<body>
		<div class="container">
			<div class="row">
				<div class="one-half column" style="margin-top: 25%">
					<h1>You are currently logged in as:
						<%= vName %>!</h1>
					<br>
					<p>
						<a href="/logout">Log out</a><br>
						<a href="/pigeons/form">Sign up for more sessions</a>
					</p>

            <h5>Our record shows you have sign up for the sessions:</h5>
					<table id="sessions-table" class="u-full-width">
						<thead>
							<tr>
								<th>Date</th>
								<th>Weekday</th>
								<th>Availability</th>
								<th>Created At</th>
								<th>Action</th>
							</tr>
						</thead>
						<tbody>
							<% if (pigeons.length) { %>
								<% pigeons.forEach(function(session) { %>
									<tr>

										<td class="session-date"><%= new Date(session.rDate).toDateString() %></td>

										<td><%= new Date(session.rDate).toLocaleString('en-US', { weekday: 'long' }) %></td>
										<td><%= session.availability %></td>
										<td><%= new Date(session.createdAt).toLocaleString() %></td>
										<td>
											<button type="button" class="delete-button" data-id="<%= session._id %>" data-date="<%= session.rDate.toISOString() %>">Delete</button>
										</td>
									</tr>
								<% }); %>
							<% } else { %>
								<tr>
									<td colspan="5">No sessions found.</td>
								</tr>
							<% } %>

					</tbody>
				</table>

			</div>
		</div></div>
	</body>
</html>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    console.log("DOM fully loaded and parsed");
    const deleteButtons = document.querySelectorAll(".delete-button");

    deleteButtons.forEach(button => {
      button.addEventListener("click", async () => {
        const sessionId = button.getAttribute("data-id"); // Fetch the session ID from the button
        const userConfirmed = window.confirm("Are you sure you want to delete this session? This action cannot be undone.");

        if (!userConfirmed) return; // Exit if user cancels

        try {
          const response = await fetch(`/pigeons/delete/${sessionId}`, {
            method: "DELETE",
            headers: { "Content-Type": "application/json" },
          });

          if (response.ok) {
            button.closest("tr").remove(); // Remove the table row on successful deletion
            alert("Session deleted successfully.");
          } else {
            alert("Failed to delete the session. Please try again.");
          }
        } catch (error) {
          console.error("Error while deleting session:", error);
          alert("Something went wrong. Please try again later.");
        }
      });
    });
  });
</script>

	

// Function to handle delete button click
/* function handleDelete(sessionId, rDate) { 
            console.log("In handleDelete function");
            if (canDeleteSession(rDate)) { 
              console.log("Returned from canDeleteSession function");
              let response = fetch(`/pigeons/delete`, { 
                method: 'POST', 
                headers: { 
                  'Content-Type': 'application/json' 
                }, 
                // body: JSON.stringify({ id: sessionId }) 
                body: sessionId
              }) 
              .then(response => response.json()) 
              .then(data => { 
                if (data.success) { 
                  location.reload(); // Reload the page to reflect changes 
                } else { 
                  alert(data.message); 
                } 
              }) 
              .catch(error => console.error('Error:', error)); 
              } else { 
                alert('You can only delete a session at least 48 hours before the event.'); 
              } 
            } */
          